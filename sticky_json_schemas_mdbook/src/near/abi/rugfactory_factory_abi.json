{
  "schema_version": "0.4.0",
  "metadata": {
    "name": "rugfactory_factory",
    "version": "0.1.0"
  },
  "body": {
    "functions": [
      {
        "name": "admin_get_balance",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "admin_get_info",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": [
              {
                "$ref": "#/definitions/AccountId"
              },
              {
                "$ref": "#/definitions/AccountId"
              },
              {
                "$ref": "#/definitions/AccountId"
              },
              {
                "$ref": "#/definitions/AccountId"
              }
            ],
            "maxItems": 4,
            "minItems": 4
          }
        }
      },
      {
        "name": "admin_update_info",
        "doc": " ðŸ‘‹\n Admin methods",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "ref_contract",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "shit_token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "wrap_near",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        }
      },
      {
        "name": "contract_source_metadata",
        "kind": "view"
      },
      {
        "name": "ft_on_transfer",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "sender_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "greeting_get",
        "doc": " ðŸ‘‹\n Greeting methods",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "greeting_set",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "greeting",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      {
        "name": "init",
        "doc": " ðŸ‘‹\n Initialization method",
        "kind": "call",
        "modifiers": [
          "init"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "owner_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "ref_contract",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "shit_token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "wrap_near",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        }
      },
      {
        "name": "token_create",
        "doc": " ðŸ‘‹\n Token methods",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "name",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "icon",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "token_delete",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_symbol",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "token_delete_callback",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "token_list_all",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/TokenMetadata"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      },
      {
        "name": "user_deposit_near",
        "doc": " ðŸ‘‹\n User methods",
        "kind": "call",
        "modifiers": [
          "payable"
        ]
      },
      {
        "name": "user_get_balance",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      {
        "name": "user_get_near_balance",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "user_get_shit_balance",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "user_withdraw_near",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      }
    ],
    "root_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string",
      "definitions": {
        "AccountId": {
          "description": "NEAR Account Identifier.\n\nThis is a unique, syntactically valid, human-readable account identifier on the NEAR network.\n\n[See the crate-level docs for information about validation.](index.html#account-id-rules)\n\nAlso see [Error kind precedence](AccountId#error-kind-precedence).\n\n## Examples\n\n``` use near_account_id::AccountId;\n\nlet alice: AccountId = \"alice.near\".parse().unwrap();\n\nassert!(\"Æ’elicia.near\".parse::<AccountId>().is_err()); // (Æ’ is not f) ```",
          "type": "string"
        },
        "Promise": true,
        "TokenMetadata": {
          "type": "object",
          "required": [
            "creator_id",
            "name",
            "symbol"
          ],
          "properties": {
            "creator_id": {
              "type": "string"
            },
            "icon": {
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "type": "string"
            },
            "symbol": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}